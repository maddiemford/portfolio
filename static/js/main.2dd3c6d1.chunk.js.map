{"version":3,"sources":["components/Home.js","components/About.js","components/Contact.js","components/Projects.js","components/Resume.js","components/Main.js","App.js","serviceWorker.js","index.js","doodle.svg"],"names":["Home","className","style","width","noSpacing","col","src","Doodle","alt","class","href","rel","target","aria-hidden","Component","About","Contact","Projects","Resume","Main","exact","path","component","App","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","toggleButton","getElementsByClassName","navbarLinks","addEventListener","classList","toggle","module","exports"],"mappings":"uPAsCeA,E,uKAhCP,OACI,yBAAKC,UAAU,YAAYC,MAAO,CAACC,MAAO,SACtC,kBAAC,OAAD,CAAMF,UAAU,eAAeG,WAAW,GACtC,kBAAC,OAAD,CAAMC,IAAK,IACP,yBACIC,IAAKC,IACLC,IAAI,SACJP,UAAU,eAEd,yBAAKA,UAAU,eACX,4BAAI,wCACJ,yBAAKQ,MAAM,aAAX,IAAwB,gDAAxB,KACA,4DACA,uCACA,yBAAKR,UAAU,gBAEX,uBAAGS,KAAK,0CAA0CC,IAAI,sBAAsBC,OAAO,UAC/E,uBAAGX,UAAU,wBAAwBY,cAAY,UAGrD,uBAAGH,KAAK,iCAAiCC,IAAI,sBAAsBC,OAAO,UACtE,uBAAGX,UAAU,sBAAsBY,cAAY,mB,GAvBhEC,aCMJC,E,uKANP,OACI,6BAAK,0C,GAHGD,aCQLE,E,uKANP,OACI,6BAAK,4C,GAHKF,aCQPG,E,uKANP,OACI,6BAAK,6C,GAHMH,aCQRI,E,uKANP,OACI,6BAAK,2C,GAHIJ,aCiBNK,EAVF,kBACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWtB,IAC3C,kBAAC,IAAD,CAAOqB,KAAK,mBAAmBC,UAAWP,IAC1C,kBAAC,IAAD,CAAOM,KAAK,qBAAqBC,UAAWN,IAC5C,kBAAC,IAAD,CAAOK,KAAK,sBAAsBC,UAAWL,IAC7C,kBAAC,IAAD,CAAOI,KAAK,oBAAoBC,UAAWJ,M,QCuBpCK,MAhCf,WACE,OACE,yBAAKtB,UAAU,oBACf,kBAAC,SAAD,KACI,yBAAKQ,MAAM,UACT,yBAAKA,MAAM,SAAX,eACA,uBAAGC,KAAK,IAAID,MAAM,iBAChB,0BAAMA,MAAM,QACZ,0BAAMA,MAAM,QACZ,0BAAMA,MAAM,SAEd,yBAAKA,MAAM,gBACT,4BACE,kBAAC,aAAD,KACF,4BAAI,kBAAC,IAAD,CAAMe,GAAG,oBAAT,UACF,4BAAI,uBAAGd,KAAK,oBAAR,aACJ,4BAAI,uBAAGA,KAAK,qBAAR,WACJ,4BAAI,uBAAGA,KAAK,uBAAR,aACJ,4BAAI,uBAAGA,KAAK,sBAAR,gBAKV,kBAAC,UAAD,CAAST,UAAU,WACjB,yBAAKA,UAAU,iBACf,kBAAC,EAAD,UCnBUwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCTNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,YCpH5B,IAAMC,EAAeZ,SAASa,uBAAuB,iBAAiB,GAChEC,EAAcd,SAASa,uBAAuB,gBAAgB,GAEpED,EAAaG,iBAAiB,SAAS,WACnCD,EAAYE,UAAUC,OAAO,c,mBCzBjCC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.2dd3c6d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport Doodle from '../doodle.svg';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home-page\" style={{width: '100%'}}>\r\n                <Grid className=\"landing-grid\" noSpacing={true} >\r\n                    <Cell col={12}>\r\n                        <img \r\n                            src={Doodle}\r\n                            alt=\"doodle\"\r\n                            className=\"doodle-img\"\r\n                        />  \r\n                        <div className=\"banner-text\">\r\n                            <h3><span>HELLO</span></h3>\r\n                            <div class=\"container\"> <h1>I AM MADDIE FORD</h1> </div>\r\n                            <h2>COMPUTER ENGINEERING STUDENT</h2>\r\n                            <h4>she/her</h4>\r\n                            <div className=\"social-links\">\r\n                                {/* LinkedIn */}\r\n                                <a href=\"https://linkedin.com/in/madeline-m-ford\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                                </a>\r\n                                {/* GitHub */}\r\n                                <a href=\"https://github.com/maddiemford\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                                </a>\r\n                            </div>\r\n                       </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div><h1>About</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div><h1>Contact</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return (\r\n            <div><h1>Projects</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return (\r\n            <div><h1>Resume</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport Projects from \"./Projects\";\r\nimport Resume from \"./Resume\";\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/portfolio/\" component={Home} />\r\n        <Route path=\"/portfolio/about\" component={About} />\r\n        <Route path=\"/portfolio/contact\" component={Contact} />\r\n        <Route path=\"/portfolio/projects\" component={Projects} />\r\n        <Route path=\"/portfolio/resume\" component={Resume} />\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Content, Navigation } from 'react-mdl';\nimport Main from \"./components/Main\";\nimport { Link } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <nav class=\"navbar\">\n          <div class=\"title\">MADDIE FORD</div>\n          <a href=\"#\" class=\"toggle-button\">\n            <span class=\"bar\"></span>\n            <span class=\"bar\"></span>\n            <span class=\"bar\"></span>\n          </a>\n          <div class=\"navbar-links\">\n            <ul>\n              <Navigation>\n            <li><Link to=\"/portfolio/about\">ABOUT</Link></li>\n              <li><a href=\"/portfolio/about\">ABOUT ME</a></li>\n              <li><a href=\"/portfolio/resume\">RESUME</a></li>\n              <li><a href=\"/portfolio/projects\">PROJECTS</a></li>\n              <li><a href=\"/portfolio/contact\">CONTACT</a></li>\n              </Navigation>\n            </ul>\n          </div>\n        </nav>\n        <Content className=\"content\">\n          <div className=\"page-content\" />\n          <Main/>\n        </Content>\n    </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst toggleButton = document.getElementsByClassName('toggle-button')[0]\nconst navbarLinks = document.getElementsByClassName('navbar-links')[0]\n\ntoggleButton.addEventListener('click', () => {\n    navbarLinks.classList.toggle('active')\n})\n","module.exports = __webpack_public_path__ + \"static/media/doodle.eb94fe20.svg\";"],"sourceRoot":""}